---
import { ViewTransitions } from "astro:transitions";
import Nav from "../components/Nav.astro";
import "../styles/global.css";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#ffffff" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <Nav />
    <slot />
    <script is:inline>
      const root = document.documentElement;
      const theme = localStorage.getItem("theme");
      if (
        theme === "dark" ||
        (!theme && window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        root.classList.add("dark");
      } else {
        root.classList.remove("dark");
      }
    </script>

    <script>
      document.addEventListener("astro:after-swap", () => {
        localStorage.theme === "dark"
          ? document.documentElement.classList.add("dark")
          : null;
      });
    </script>

    <style is:global>
      body {
        @apply bg-white dark:bg-zinc-800;
      }
      html {
        scroll-behavior: smooth;
      }
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        @apply text-3xl font-bold dark:text-white;
      }

      p {
        @apply text-black dark:text-white;
      }
    </style>
  </body><!-- This is intentionally inlined to avoid FOUC -->
</html>
